Name: Akshy S
Employee ID: CAPG48LSRB342

1.	What is difference in Overloading and Overriding?
No.	Method Overloading	Method Overriding
1)	Method overloading is used to increase the readability of the program.	Method overriding is used to provide the specific implementation of the method that is already provided by its super class.
2)	Method overloading is performed within class.	Method overriding occurs in two classes that have IS-A (inheritance) relationship.
3)	In case of method overloading, parameter must be different.	In case of method overriding, parameter must be same.
4)	Method overloading is the example of compile time polymorphism.	Method overriding is the example of run time polymorphism.
5)	In java, method overloading can't be performed by changing return type of the method only. Return type can be same or different in method overloading. But you must have to change the parameter.	Return type must be same or covariant in method overriding.


2.	If both the functions are static, can we over ride?
No, we cannot override static methods because method overriding is based on dynamic binding at runtime and the static methods are bonded using static binding at compile time.


3.	Differences between Final, Finally and Finalize.
Sr. no.	Key	final	finally	finalize
1.	Definition	final is the keyword and access modifier which is used to apply restrictions on a class, method or variable.	finally is the block in Java Exception Handling to execute the important code whether the exception occurs or not.	finalize is the method in Java which is used to perform clean up processing just before object is garbage collected.
2.	Applicable to	Final keyword is used with the classes, methods and variables.	Finally block is always related to the try and catch block in exception handling.	finalize() method is used with the objects.
3.	Functionality	(1) Once declared, final variable becomes constant and cannot be modified.
(2) final method cannot be overridden by sub class.
(3) final class cannot be inherited.	(1) finally block runs the important code even if exception occurs or not.
(2) finally block cleans up all the resources used in try block	finalize method performs the cleaning activities with respect to the object before its destruction.
4.	Execution	Final method is executed only when we call it.	Finally block is executed as soon as the try-catch block is executed.
It's execution is not dependant on the exception.	finalize method is executed just before the object is destroyed.


4.	What are maker Interfaces?
An interface that does not contain methods, fields, and constants is known as marker interface. In other words, an empty interface is known as marker interface or tag interface. It delivers the run-time type information about an object. It is the reason that the JVM and compiler have additional information about an object. The Serializable and Cloneable interfaces are the example of marker interface. In short, it indicates a signal or command to the JVM.

5.	What is Singleton class?
Singleton Pattern says that just "define a class that has only one instance and provides a global point of access to it".
In other words, a class must ensure that only single instance should be created and single object can be used by all other classes.

6.	What is the underlying Data structure for Arraylist and Linkedlist?
Both ArrayList and LinkedList are two different implementations of the List interface. ArrayList is a resizable-array implementation, whereas LinkedList is a Doubly-linked list implementation of the List interface.

7.	What is hash collision?
A collision, or more specifically, a hash code collision in a HashMap, is a situation where two or more key objects produce the same final hash value and hence point to the same bucket location or array index

8.	What are lambda Expressions?
Lambda expression is a new and important feature of Java which was included in Java SE 8. It provides a clear and concise way to represent one method interface using an expression. It is very useful in collection library. It helps to iterate, filter and extract data from collection.
The Lambda expression is used to provide the implementation of an interface which has functional interface. It saves a lot of code. In case of lambda expression, we don't need to define the method again for providing the implementation. Here, we just write the implementation code.
Java lambda expression is treated as a function, so compiler does not create .class file.

9.	What is functional interface?
An Interface that contains exactly one abstract method is known as functional interface. It can have any number of default, static methods but can contain only one abstract method. It can also declare methods of object class.

10.	What are optional classes in Java 8?
Optional is a container object used to contain not-null objects. Optional object is used to represent null with absent value. This class has various utility methods to facilitate code to handle values as 'available' or 'not available' instead of checking null values.

11.	What is factory design pattern and Adapter and difference between them.
Factory pattern is one of the most used design patterns in Java. This type of design pattern comes under creational pattern as this pattern provides one of the best ways to create an object.
In Factory pattern, we create object without exposing the creation logic to the client and refer to newly created object using a common interface.
Adapter pattern works as a bridge between two incompatible interfaces. This type of design pattern comes under structural pattern as this pattern combines the capability of two independent interfaces.
This pattern involves a single class which is responsible to join functionalities of independent or incompatible interfaces.

12.	What are Solid principles?
In Java, SOLID principles are an object-oriented approach that are applied to software structure design. It is conceptualized by Robert C. Martin (also known as Uncle Bob). These five principles have changed the world of object-oriented programming, and also changed the way of writing software. It also ensures that the software is modular, easy to understand, debug, and refactor.
The word SOLID acronym for:
Single Responsibility Principle (SRP)
Open-Closed Principle (OCP)
Liskov Substitution Principle (LSP)
Interface Segregation Principle (ISP)
Dependency Inversion Principle (DIP)

13.	What does @component and @scan do in Sprinboot annaotation?
@Component is an annotation that allows Spring to automatically detect our custom beans. In other words, without having to write any explicit code, Spring will: Scan our application for classes annotated with @Component.
@ComponentScan annotation enables component scanning in Spring.

14.	What is the Difference between JPA , Hibernate and ORM?
1.    ORM is the approach of taking object-oriented data and mapping to a relational data store (e.g. tables in a RDBMS)
2.    JPA is the Java EE standard specification for ORM in Java EE.
3.    The reference implementation for JPA is EclipseLink. If you don't explictly configure a provider, EclipseLink is used under the covers.
4.    Hibernate is another implementation of the JPA specification, in that you can use the standard JPA APIs and configure your application to use Hibernate as the provider of the spec under the covers.
5.    Hibernate also provides a superset of the ORM features beyond what is specified in the JPA spec. Meaning, that while it provides an implementation of the JPA API, it also provides more features beyond what JPA specifies.

15.	What is indexing in Database?
Indexing is a way to optimize the performance of a database by minimizing the number of disk accesses required when a query is processed. It is a data structure technique which is used to quickly locate and access the data in a database. Indexes are created using a few database columns.



16.	What are 4 types of Drivers in Jdbc ?
Types of JDBC drivers: 
1.    Type-1 driver or JDBC-ODBC bridge driver 
2.    Type-2 driver or Native-API driver 
3.    Type-3 driver or Network Protocol driver 
4.    Type-4 driver or Thin driver

17.	What is difference between @component and @bean and @service?
@Component Preferable for component scanning and automatic wiring.
@Bean annotation returns an object that spring should register as bean in application context.
@Service annotates classes at the service layer.

18.	What is difference between SOAP and restful services technically?
SOAP is protocol based while REST is an architecture. Developers find working with REST little easier as compared with SOAP.While handling SOAP request response, we deal with only XML. In case of REST, we have flexibility to choose in XML,JSON, text.

19.	 Difference in POST and PUT?
PUT method is call when you have to modify a single resource, which is already a part of resource collection.it works as specific POST method is call when you have to add a child resource under resources collection.it work as abstract.Also, calling the same PUT request multiple times will always produce the same result. In contrast, calling a POST request repeatedly have side effects of creating the same resource multiple times.

20.	IS react uni-directional or Bi directional
React, a JavaScript library, uses unidirectional data flow. The data from the parent is known as props. You can only transfer data from parent to child and not vice versa.
